import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;

/**
 *
 * Beschreibung
 *
 * @version 1.0 vom 27.04.2021
 * @author 
 */

public class calcUI extends JFrame {
  // Anfang Attribute
  private JButton b7 = new JButton();
  private JButton b8 = new JButton();
  private JButton b9 = new JButton();
  private JButton b10 = new JButton();
  private JButton b4 = new JButton();
  private JButton b5 = new JButton();
  private JButton b6 = new JButton();
  private JTextField display = new JTextField();
  private JButton b11 = new JButton();
  private JButton b1 = new JButton();
  private JButton b2 = new JButton();
  private JButton b3 = new JButton();
  private JButton bX = new JButton();
  private JButton b13 = new JButton();
  private JButton b0 = new JButton();
  private JButton SOL = new JButton();
  private JButton b12 = new JButton();
  private JButton bC = new JButton();
  private JButton b14 = new JButton();
  
  private String calc=""; //Speichert die Rechnung
  private JButton bDEL = new JButton();
  // Ende Attribute
  
  public calcUI() { 
    // Frame-Initialisierung
    super();
    setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    int frameWidth = 602; 
    int frameHeight = 463;
    setSize(frameWidth, frameHeight);
    Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
    int x = (d.width - getSize().width) / 2;
    int y = (d.height - getSize().height) / 2;
    setLocation(x, y);
    setTitle("calcUI");
    setResizable(false);
    Container cp = getContentPane();
    cp.setLayout(null);
    // Anfang Komponenten
    
    b7.setBounds(33, 168, 90, 50);
    b7.setText("7");
    b7.setMargin(new Insets(2, 2, 2, 2));
    b7.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b7_ActionPerformed(evt);
      }
    });
    b7.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b7);
    b8.setBounds(133, 168, 90, 50);
    b8.setText("8");
    b8.setMargin(new Insets(2, 2, 2, 2));
    b8.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b8_ActionPerformed(evt);
      }
    });
    b8.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b8);
    b9.setBounds(233, 168, 90, 50);
    b9.setText("9");
    b9.setMargin(new Insets(2, 2, 2, 2));
    b9.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b9_ActionPerformed(evt);
      }
    });
    b9.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b9);
    b10.setBounds(333, 168, 90, 50);
    b10.setText("+");
    b10.setMargin(new Insets(2, 2, 2, 2));
    b10.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b10_ActionPerformed(evt);
      }
    });
    b10.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b10);
    b4.setBounds(33, 230, 90, 50);
    b4.setText("4");
    b4.setMargin(new Insets(2, 2, 2, 2));
    b4.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b4_ActionPerformed(evt);
      }
    });
    b4.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b4);
    b5.setBounds(133, 230, 90, 50);
    b5.setText("5");
    b5.setMargin(new Insets(2, 2, 2, 2));
    b5.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b5_ActionPerformed(evt);
      }
    });
    b5.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b5);
    b6.setBounds(233, 230, 90, 50);
    b6.setText("6");
    b6.setMargin(new Insets(2, 2, 2, 2));
    b6.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b6_ActionPerformed(evt);
      }
    });
    b6.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b6);
    display.setBounds(33, 13, 494, 140);
    display.setEditable(false);
    display.setHorizontalAlignment(SwingConstants.RIGHT);
    display.setText("0");
    display.setFont(new Font("Comic Sans MS", Font.BOLD, 52));
    cp.add(display);
    b11.setBounds(333, 230, 90, 50);
    b11.setText("-");
    b11.setMargin(new Insets(2, 2, 2, 2));
    b11.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b11_ActionPerformed(evt);
      }
    });
    b11.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b11);
    b1.setBounds(32, 292, 90, 50);
    b1.setText("1");
    b1.setMargin(new Insets(2, 2, 2, 2));
    b1.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b1_ActionPerformed(evt);
      }
    });
    b1.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b1);
    b2.setBounds(133, 292, 90, 50);
    b2.setText("2");
    b2.setMargin(new Insets(2, 2, 2, 2));
    b2.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b2_ActionPerformed(evt);
      }
    });
    b2.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b2);
    b3.setBounds(233, 292, 90, 50);
    b3.setText("3");
    b3.setMargin(new Insets(2, 2, 2, 2));
    b3.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b3_ActionPerformed(evt);
      }
    });
    b3.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b3);
    bX.setBounds(333, 292, 90, 50);
    bX.setText("x");
    bX.setMargin(new Insets(2, 2, 2, 2));
    bX.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bX_ActionPerformed(evt);
      }
    });
    bX.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(bX);
    b13.setBounds(32, 354, 90, 50);
    b13.setText(",");
    b13.setMargin(new Insets(2, 2, 2, 2));
    b13.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b13_ActionPerformed(evt);
      }
    });
    b13.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b13);
    b0.setBounds(133, 354, 90, 50);
    b0.setText("0");
    b0.setMargin(new Insets(2, 2, 2, 2));
    b0.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b0_ActionPerformed(evt);
      }
    });
    b0.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b0);
    SOL.setBounds(233, 354, 90, 50);
    SOL.setText("=");
    SOL.setMargin(new Insets(2, 2, 2, 2));
    SOL.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        SOL_ActionPerformed(evt);
      }
    });
    SOL.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(SOL);
    b12.setBounds(333, 354, 90, 50);
    b12.setText("/");
    b12.setMargin(new Insets(2, 2, 2, 2));
    b12.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b12_ActionPerformed(evt);
      }
    });
    b12.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b12);
    bC.setBounds(433, 168, 90, 50);
    bC.setText("C");
    bC.setMargin(new Insets(2, 2, 2, 2));
    bC.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bC_ActionPerformed(evt);
      }
    });
    bC.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(bC);
    b14.setBounds(433, 230, 90, 50);
    b14.setText("+/-");
    b14.setMargin(new Insets(2, 2, 2, 2));
    b14.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        b14_ActionPerformed(evt);
      }
    });
    b14.setFont(new Font("Dialog", Font.BOLD, 16));
    cp.add(b14);
    bDEL.setBounds(431, 293, 91, 49);
    bDEL.setText("DEL");
    bDEL.setMargin(new Insets(2, 2, 2, 2));
    bDEL.addActionListener(new ActionListener() { 
      public void actionPerformed(ActionEvent evt) { 
        bDEL_ActionPerformed(evt);
      }
    });
    cp.add(bDEL);
    // Ende Komponenten
    
    setVisible(true);
  } // end of public calcUI
  
  // Anfang Methoden
  
  public static void main(String[] args) {
    new calcUI();
  } // end of main
  
  public void b7_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 7;
    display.setText(calc);
    
  } // end of b7_ActionPerformed

  public void b8_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 8;
    display.setText(calc);
    
  } // end of b8_ActionPerformed

  public void b9_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 9;
    display.setText(calc);
    
  } // end of b9_ActionPerformed

  public void b10_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + "+";
    display.setText(calc);
    
  } // end of b10_ActionPerformed

  public void b4_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 4;
    display.setText(calc);
    
  } // end of b4_ActionPerformed

  public void b5_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 5;
    display.setText(calc);
  } // end of b5_ActionPerformed

  public void b6_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 6;
    display.setText(calc);
  } // end of b6_ActionPerformed

  public void b11_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + "-";
    display.setText(calc);
  } // end of b11_ActionPerformed

  public void b1_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 1;
    display.setText(calc);
  } // end of b1_ActionPerformed

  public void b2_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 2;
    display.setText(calc);
  } // end of b2_ActionPerformed

  public void b3_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 3;
    display.setText(calc);
  } // end of b3_ActionPerformed

  public void bX_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + "*";
    display.setText(calc);
  } // end of bX_ActionPerformed

  public void b13_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + ",";
    display.setText(calc);
    
  } // end of b13_ActionPerformed

  public void b0_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + 0;
    display.setText(calc);
  } // end of b0_ActionPerformed

  public void SOL_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    solve();
    calc = "";
    
    
  } // end of SOL_ActionPerformed

  public void b12_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = calc + "/";
    display.setText(calc);
  } // end of b12_ActionPerformed

  public void bC_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    calc = "";
    display.setText("0");
  } // end of bC_ActionPerformed

  public void b14_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    
  } // end of b14_ActionPerformed

  public void bDEL_ActionPerformed(ActionEvent evt) {
    // TODO hier Quelltext einfügen
    if (calc.length()>0) {
       calc = calc.substring(0, calc.length()-1);  
    }    
    
    if (calc.length()==0) {
      display.setText("0");
    } else {
      display.setText(calc);
    } // end of if-else
  }
  
  private void solve(){
    //löst die Rechnung, die im String calc steht
    int index = -1;
    int i = 0;
    
    loop:
    while (true) { 
      if (i<=calc.length()-1) {
        
      } else {
      display.setText("Kein Rechenzeichen");
      break loop; 
      } // end of if-else
        
      } // end of if
      i++;
    } // end of while
  
    if (index> -1) {
      String num1 = calc.substring(0, index);
      String num2 = calc.substring(index+1, calc.length());
      long l1 = Long.parseLong(num1);
      long l2 = Long.parseLong(num2);
    } // end of if
    
    if (calc.charAt(ind)) {
      
    } // end of if
  
  
  
  // Ende Methoden
} // end of class calcUI
